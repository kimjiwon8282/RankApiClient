# 워크플로 이름을 정의합니다. GitHub Actions UI에 "CI"로 표시됩니다.
name: CI

# 워크플로를 어떤 이벤트에 반응하여 실행할지 정의합니다.
on:
  push:                    # 코드가 푸시될 때
    branches:
      - main               # main 브랜치에 푸시될 경우에만 실행

jobs:
  build:                   # job 이름을 정의합니다. 자유롭게 지을 수 있습니다.
    runs-on: ubuntu-latest # 이 Job을 실행할 런너 환경을 지정합니다.
    # GitHub에서 제공하는 최신 우분투 이미지를 사용

    steps:                 # 이 Job에서 순차적으로 실행할 단계(steps) 목록
      - uses: actions/checkout@v3
        # 1) 레포지토리의 코드를 체크아웃합니다.
        #    - 이 단계가 없으면 이후 스크립트에서 코드를 찾을 수 없습니다.

      - uses: actions/setup-java@v3
        # 2) Java 환경을 설치 및 설정합니다.
        with:
          distribution: 'zulu'   # 설치할 JDK 배포판을 지정합니다. (Zulu OpenJDK)
          java-version: '17'     # 사용하려는 Java 버전(17)을 설정합니다.

      - name: Grant execute permission for gradlew
        # 3) Gradle Wrapper 스크립트에 실행 권한을 부여합니다.
        run: chmod +x gradlew
        #    - 리눅스 환경에서 ./gradlew를 실행 가능하도록 권한을 변경합니다.

      - name: Build with Gradle
        # 4) 실제로 프로젝트를 빌드하는 단계입니다.
        run: ./gradlew clean build
        #    - clean: 이전 빌드 산출물을 삭제
        #    - build: 컴파일, 테스트, 패키징까지 수행하여 최종 JAR/WAR 생성