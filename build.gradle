plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//타임리스 + 웹
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//컴파일 전용 + 어노테이션 프로세싱
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//test관련
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//HttpClient
	implementation 'org.apache.httpcomponents.client5:httpclient5'

	//데이터베이스
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Spring Security + OAuth2 & JWT
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// @ConfigurationProperties 지원
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// @Retryable 동작용 (AOP 프록시)
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// 실패 재시도
	implementation 'org.springframework.retry:spring-retry:2.0.7'

	// ShedLock (스프링 연동 + Mongo 프로바이더)
	implementation 'net.javacrumbs.shedlock:shedlock-spring:5.14.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-mongo:5.14.0'

	//메일
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//개발 시 잠깐 사용(타임리프 바로 반영 DevTools)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

// 1. JUnit 플랫폼 선언 (선택 사항, 있어도 무방)
tasks.named('test') {
	useJUnitPlatform()
}

// 2. 테스트 완전히 비활성화 (중요)
tasks.withType(Test) {
	enabled = false
}

jar{
	enabled=false
}